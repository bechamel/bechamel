label {
  display: block;
  margin-bottom: 5px;
  font-weight: $font-bold;
}

::placeholder {
   color: $input-color-placeholder;
}

input, textarea, select {
  position: relative;
  display: block;
  width: 100%;
  height: $input-height;
  line-height: 1;
  padding: 0 15px 0 0;
  margin: 0 0 15px 0;
  font-size: $input-font-size;
  background-color: transparent;
  color: $inherit-color;
  text-indent: $input-text-indent;
  border: none;
  border-bottom-width: $input-border-width;
  border-bottom-color: $input-border-color;
  border-bottom-style: solid;
  border-radius: $input-border-radius;
  transition: all .3s;
  -webkit-appearance: none;

  &:hover {
    border-color: darken( $input-border-color, 20% );
  }

  &:focus {
    border-color: $input-hover-border-color;
  }

  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background: $input-bg-disabled;
  }

  &[disabled],
  fieldset[disabled] & {
    background: $input-bg-disabled;
    cursor: $cursor-disabled;
  }
}

textarea {
  height: auto;
  line-height: $textarea-line-height;
}

select {
  cursor: pointer;
  color: $text-smooth;

  & option {
    color: $inherit-color;
  }
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block;
  margin-top: 5px;
  margin-bottom: 10px;
  color: $color-gray;
}


/*
===========================
#CustomSelect
===========================
*/
// Criar como componente separado.
//
.custom_select {
  position: relative;
  display: block;
  width: 100%;

  &:after {
    content: '';
    position: absolute;
    top: 50%;
    right: 10px;
    display: block;
    width: 0;
    height: 0;
    margin-top: -2px;
    border-top: 4px dashed;
    border-right: 4px solid transparent;
    border-left: 4px solid transparent;
  }
  select {
    appearance: inherit;
  }
}

// Bootstrap Copy
//
// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    min-height: $line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
  margin-top: 4px \9;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: $cursor-disabled;
    }
  }
}